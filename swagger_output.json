{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "INEO",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Protestos",
      "description": "Endpoints"
    },
    {
      "name": "Emoluendos",
      "description": "Endpoints"
    },
    {
      "name": "Usuários",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/user/login": {
      "post": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para autenticar um usuário.",
        "parameters": [
          {
            "name": "insertData",
            "in": "body",
            "description": "Informações de login.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/user/": {
      "get": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para encontrar todos os usuários.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para inserir um usuário.",
        "parameters": [
          {
            "name": "insertData",
            "in": "body",
            "description": "Informações do usuário.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddUsers"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/user/{id}": {
      "get": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para encontrar um usuário pelo id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para atualizar um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "updateData",
            "in": "body",
            "description": "Informações do usuário.",
            "schema": {
              "$ref": "#/definitions/EditUser"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para atualizar um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/protest/": {
      "get": {
        "tags": [
          "Protestos"
        ],
        "description": "Endpoint para encontrar todos os Protestos.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Protestos"
        ],
        "description": "Endpoint para inserir um protesto.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "insertData",
            "in": "body",
            "description": "Informações do protesto.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddProtests"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/protest/{id}": {
      "get": {
        "tags": [
          "Protestos"
        ],
        "description": "Endpoint para encontrar um protesto pelo id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Protestos"
        ],
        "description": "Endpoint para atualizar um protesto.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "updateData",
            "in": "body",
            "description": "Informações do protesto.",
            "schema": {
              "$ref": "#/definitions/EditProtest"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Protestos"
        ],
        "description": "Endpoint para atualizar um protesto.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/fee/": {
      "get": {
        "tags": [
          "Emolumentos"
        ],
        "description": "Endpoint para encontrar todos os Emolumentos.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Emolumentos"
        ],
        "description": "Endpoint para inserir um emolumento.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "insertData",
            "in": "body",
            "description": "Informações do emolumento.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddFees"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/fee/{id}": {
      "get": {
        "tags": [
          "Emolumentos"
        ],
        "description": "Endpoint para encontrar um emolumento pelo id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Emolumentos"
        ],
        "description": "Endpoint para atualizar um emolumento.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "updateData",
            "in": "body",
            "description": "Informações do emolumento.",
            "schema": {
              "$ref": "#/definitions/EditFee"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Emolumentos"
        ],
        "description": "Endpoint para atualizar um emolumento.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "marcelo@gmail.com"
        },
        "name": {
          "type": "string",
          "example": "Marcelo"
        },
        "password": {
          "type": "string",
          "example": "senha123"
        }
      }
    },
    "AddUsers": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "marcelo@gmail.com"
        },
        "name": {
          "type": "string",
          "example": "Marcelo"
        },
        "password": {
          "type": "string",
          "example": "senha123"
        }
      },
      "required": [
        "email",
        "name",
        "password"
      ]
    },
    "EditUser": {
      "type": "object",
      "properties": {
        "model": {
          "type": "string",
          "example": "Roberto"
        }
      }
    },
    "Protests": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "example": "1231242"
        },
        "debt": {
          "type": "number",
          "example": 5000
        },
        "description": {
          "type": "string",
          "example": "descrição"
        }
      }
    },
    "AddProtests": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "example": "1231242"
        },
        "debt": {
          "type": "number",
          "example": 5000
        },
        "description": {
          "type": "string",
          "example": "descrição"
        }
      },
      "required": [
        "user_id",
        "debt",
        "description"
      ]
    },
    "EditProtest": {
      "type": "object",
      "properties": {
        "debt": {
          "type": "number",
          "example": 3999
        }
      }
    },
    "Fees": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "example": "1231242"
        },
        "protest_id": {
          "type": "string",
          "example": "23423525"
        },
        "protest_fee": {
          "type": "number",
          "example": 50
        }
      }
    },
    "AddFees": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "example": "1231242"
        },
        "protest_id": {
          "type": "string",
          "example": "23423525"
        },
        "protest_fee": {
          "type": "number",
          "example": 50
        }
      },
      "required": [
        "user_id"
      ]
    },
    "EditFee": {
      "type": "object",
      "properties": {
        "protest_fee": {
          "type": "number",
          "example": 3999
        }
      }
    }
  }
}